package ru.vsu.cs;

/*
Заранее придумать не менее 5 различных тестов, охватывающих как типичные, так и
все возможные граничные (наиболее невероятные и показательные) ситуации.
Как обычно, решение должно быть оформлено в виде отдельной функции /
функций или класса.
Если в задаче используются регулярные выражения, то вы должны очень хорошо
понимать, что это, и все особенности применительно к вашей задаче!
Если в вашем решении используется многократная конкатенация строк (не один-два-три раза, а именно многократная),
то для эффективности использовать StringBuilder.
В задачах, где необходимо выбрать что-то без повторений, удобным (и эффективным в
плане быстродействия) будет использовать Set<String> (HashSet<String> или
TreeSet<String>) для хранения уже выбранных элементов. В задачах, где необходимо строке
сопоставить какое-то значение, можно воспользоваться Map<String, Integer>
(HashMap<String, Integer> или TreeMap<String, Integer>).

11 таск варик [9]
Дан текст, состоящий из предложений. Концом предложения считаются символы точка,
'!' и '?'. Началом предложения – любой символ, отличный от данных трех и пробела,
первый после конца предыдущего предложения (или вообще первый в тексте). Выбрать
(в виде списка) из текста все вопросительные предложения
 */

import java.util.ArrayList;
import java.util.List;

public class Main {

    public static void main(String[] args) {
        List<String> list= new ArrayList<>();
        list = listOfAllInterrogativeSentences("В лингвистике термин «текст» используется в широком значении, включая и образцы устной речи. Восприятие текста изучается в рамках лингвистики текста и психолингвистики. Так, например, И. Р. Гальперин определяет текст следующим образом: «Это письменное сообщение, объективированное в виде письменного документа, состоящее из ряда высказываний, объединённых разными типами лексической, грамматической и");
        for (String s : list) {
            System.out.println(s);
        }
    }
    public static List<String> listOfAllInterrogativeSentences (String str){
        List<String> list= new ArrayList<>();

        //list = List.of(str.split("!")); // \\ нужны для того, чтобы джава не думала что мы команду какуе-то прописать хотим а просто символ
        list = List.of(str.split("[.!?]")); // .of вместо задачи new и  add те сократили
        // в [] мы сунули сразу несколько разделителей

        return list;
    }
}
